name: Solar System Workflow with Job/Service containers

on: 
  workflow_dispatch:
  push:
    branches:
      - main
      - 'feature/*'
env:
  MONGO_URI: mongodb+srv://supercluster.d83jj.mongodb.net/superData
  MONGO_USERNAME: superuser
  MONGO_PASSWORD: ${{ secrets.MONGO_PASSWORD }}
jobs:
    unit-testing:
        name: Unit Testing
        runs-on: ubuntu-latest
        outputs:
          URL: ${{ steps.job-output.outputs.URL}}
        container: 
          image: node:20
        services:
          mongo-db:
            image: mongo
            options: 
              --name mongo
        env:
          MONGO_URI: 'mongodb://mongoadmin:mongopasswd@mongo:27017/superData'
          MONGO_USERNAME: mongoadmin
          MONGO_PASSWORD: mongopasswd
        steps:
        - name: Checkout Repository
          uses: actions/checkout@v4

        # - name: Setup NodeJS Version
        #   uses: actions/setup-node@v4
        #   with:
        #     node-version: 20
    
        - name: Install Dependencies
          run: npm install
    
        - name: Unit Testing
          continue-on-error: true
          run: npm test
          
        - name: Archive Test Result
          if: always()
          uses: actions/upload-artifact@v4
          with:
            name: Mocha-Test-Result
            path: test-results.xml

        - name: Output value from Job
          id: job-output
          run: echo "URL=localhost" >> "$GITHUB_OUTPUT"

    docker:
      name: Containarization
      runs-on: ubuntu-latest
      needs: unit-testing
      steps:

        - name: Get previous job output
          run: echo "${{needs.unit-testing.outputs.URL}}"

        - name: Checkout
          uses: actions/checkout@v4

        - name: Docker build
          uses: docker/build-push-action@v4
          with:
            context: .
            push: false
            tags: ${{ github.repository_owner }}/solar-system:${{ github.sha }}
        
        - name: GHCR login
          uses: docker/login-action@v2.2.0
          with:
            registry: ghcr.io
            username: ${{github.repository_owner}}
            password: ${{secrets.GITHUB_TOKEN}}
        
        - name: Container push
          uses: docker/build-push-action@v4
          with:
            context: .
            push: true
            tags: ghcr.io/abhisheksenga/solar-system:${{ github.sha }}

    dev-deploy:
      needs: docker
      runs-on: ubuntu-latest
      environment:
        name: development
      steps:
        - uses: actions/checkout@v4
        - uses: azure/setup-kubectl@v3
          with:
            version: v1.26.0
        - uses: azure/k8s-set-context@v3
          with:
            method: kubeconfig
            kubeconfig: '${{ secrets.KUBECONFIG }}'
        - run: kubectl version --short -o yaml
        - run: >
            echo "INGRESS_IP=$(kubectl -n ingress-nginx get services
            ingress-nginx-controller -o
            jsonpath='{.status.loadBalancer.ingress[0].ip}')" >> $GITHUB_ENV
        - uses: cschleiden/replace-tokens@v1
          with:
            tokenPrefix: '_{_'
            tokenSuffix: '_}_'
            files: '["kubernetes/development/*.yaml"]'
          env:
            NAMESPACE: '${{ vars.NAMESPACE }}'
            REPLICAS: '${{ vars.REPLICAS }}'
            IMAGE: >-
              ghcr.io/${{ github.repository_owner }}/solar-system:${{ github.sha
              }}
            INGRESS_IP: '${{ env.INGRESS_IP }}'
        - run: cat kubernetes/development/*.yaml


